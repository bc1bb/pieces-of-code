// Get IP, AS, country, region and ISP
// Look for the results at lines 87-88
// Lots of lines are from https://grokswift.com/simple-rest-with-swift/ and https://stackoverflow.com/a/26270721
import Foundation
import PlaygroundSupport

URLCache.shared = URLCache(memoryCapacity: 0, diskCapacity: 0, diskPath: nil)
PlaygroundPage.current.needsIndefiniteExecution = true

// Refer to the example: https://grokswift.com/simple-rest-with-swift/
let todoEndpoint: String = "http://ip-api.com/json/"
guard let url = URL(string: todoEndpoint) else {
    print("Error: cannot create URL")
    exit(1)
}

let session = URLSession.shared
let urlRequest = URLRequest(url: url)

let task = session.dataTask(with: urlRequest) { (data, response, error) in
    
    // check for any errors
    guard error == nil else {
        print("error calling GET on /todos/1")
        print(error!)
        return
    }
    
    // make sure we got data
    guard let responseData = data else {
        print("Error: did not receive data")
        return
    }
    
    // check the status code
    guard let httpResponse = response as? HTTPURLResponse else {
        print("Error: It's not a HTTP URL response")
        return
    }
    
    
    // Reponse status
    print("Response status code: \(httpResponse.statusCode)")
    print("Response status debugDescription: \(httpResponse.debugDescription)")
    print("Response status localizedString: \(HTTPURLResponse.localizedString(forStatusCode: httpResponse.statusCode))")
    
    // parse the result as JSON, since that's what the API provides
    do {
        guard let todo = try JSONSerialization.jsonObject(with: responseData, options: [])
            as? [String: Any] else {
                print("error trying to convert data to JSON")
                return
        }
        // now we have the todo
        // let's just print it to prove we can access it
        print("The todo is: " + todo.description)
        
        // the todo object is a dictionary
        // so we just access the title using the "title" key
        // so check for a title and print it if we have one
        guard let asn = todo["as"] as? String else {
            print("Could not get AS from ip-api.com")
            print("responseData: \(String(data: responseData, encoding: String.Encoding.utf8))")
            return
        }; guard let ip = todo["query"] as? String else {
            print("Could not get IP from ip-api.com")
            print("responseData: \(String(data: responseData, encoding: String.Encoding.utf8))")
            return
        }; guard let ville = todo["city"] as? String else {
            print("Could not get city from ip-api.com")
            print("responseData: \(String(data: responseData, encoding: String.Encoding.utf8))")
            return
        }; guard let region = todo["regionName"] as? String else {
            print("Could not get region from ip-api.com")
            print("responseData: \(String(data: responseData, encoding: String.Encoding.utf8))")
            return
        }; guard let pays = todo["countryCode"] as? String else {
            print("Could not get CC from ip-api.com")
            print("responseData: \(String(data: responseData, encoding: String.Encoding.utf8))")
            return
        }; guard let isp = todo["isp"] as? String else {
            print("Could not get isp from ip-api.com")
            print("responseData: \(String(data: responseData, encoding: String.Encoding.utf8))")
            return
        }
        let asnArr = asn.characters.split{$0 == " "}.map(String.init)
        print(ip + " (" + asnArr[0] + " - " + isp + ")")
        print(ville + " (" + region + " - " + pays + ")")
    } catch  {
        print("error trying to convert data to JSON")
        return
    }
    
    PlaygroundPage.current.finishExecution()
}
task.resume()

